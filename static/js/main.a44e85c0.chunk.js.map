{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","type","pattern","title","onChange","required","btn","Component","ContactList","contacts","handleDelete","contactsList","map","id","item","onClick","Filter","filter","onHandleChange","App","addContact","prevState","find","contact","v4","alert","handleFilterContacts","getFilteredContacts","normaziledFilter","toLowerCase","includes","handleDeleteContact","contactId","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a44e85c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__35AqN\"};","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import { PropTypes } from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\nfunction ContactList({ contacts, handleDelete }) {\r\n  const contactsList = contacts.map(({ id, name, number }) => (\r\n    <li key={id} className={s.item}>\r\n      <div>\r\n        <span>\r\n          {name}: {number}\r\n        </span>\r\n        <button\r\n          className={s.btn}\r\n          id={id}\r\n          type=\"button\"\r\n          onClick={() => handleDelete(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </li>\r\n  ));\r\n\r\n  return <ul>{contactsList}</ul>;\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { PropTypes } from 'prop-types';\r\nimport s from './Filter.module.css';\r\nfunction Filter({ filter, onHandleChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name:\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onHandleChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onHandleChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    this.setState((prevState) => {\r\n      if (prevState.contacts.find((contact) => contact.name === name)) {\r\n        alert(`${name} is already in the contacts`);\r\n        return;\r\n      }\r\n\r\n      return {\r\n        contacts: [\r\n          ...prevState.contacts,\r\n          {\r\n            name,\r\n            number,\r\n            id: v4(),\r\n          },\r\n        ],\r\n      };\r\n    });\r\n  };\r\n\r\n  handleFilterContacts = (e) => {\r\n    return this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normaziledFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normaziledFilter)\r\n    );\r\n  };\r\n\r\n  handleDeleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n\r\n    if (contacts) {\r\n      this.setState({ contacts: contacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts(contacts, filter);\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter filter={filter} onHandleChange={this.handleFilterContacts} />\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          handleDelete={this.handleDeleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__Z7tqm\",\"label\":\"ContactForm_label__1K0kD\",\"btn\":\"ContactForm_btn__2pKqA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__16soh\",\"item\":\"ContactList_item__3q8ZN\"};"],"sourceRoot":""}